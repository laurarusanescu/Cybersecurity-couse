# Quantum Key Distribution (QKD) Tools and Applications

## GitHub Repositories:

- [QKD Get Key Tool](https://github.com/QuantumUPB/QKD-Infra-GetKey)  
- [QKD File Transfer Application](https://github.com/QuantumUPB/QKD-App-FileTransfer)  
- [QKD VPN Configurator Application](https://github.com/QuantumUPB/QKD-App-VPN)  
- [QKD Vaults Application](https://github.com/QuantumUPB/QKD-App-Vaults)  

## Topics Covered:

### QKD Standards:
- **ETSI GS QKD 014**  
  This standard defines the guidelines for Quantum Key Distribution (QKD) technologies, ensuring secure key management, distribution, and interoperability in quantum communication systems. ETSI GS QKD 014 focuses on the specifications that support the safe deployment and operation of QKD systems.

### SAE/KME Architecture:
- **SAE/KME Architecture**  
  This architecture refers to the Secure Authentication and Encryption (SAE) framework used in quantum cryptographic systems, alongside the Key Management Entity (KME) for managing encryption keys. It is fundamental in the creation of secure quantum communication channels, especially when integrating with classical networks.

### ETSI-014 REST API:
- **status**  
  The status endpoint of the ETSI-014 REST API provides real-time information on the operational state of the QKD system, including uptime and potential issues.
- **enc_keys**  
  The enc_keys endpoint allows access to the encrypted keys generated by the QKD system, ensuring secure communication between parties.
- **dec_keys**  
  The dec_keys endpoint is used to access the decrypted keys, which are essential for the final decryption of information during secure transmission.

### Live Demos:
1. **QKD Get Key Tool**  
   A live demonstration showcasing the retrieval and management of quantum keys through the QKD Get Key Tool. This tool allows the secure distribution of cryptographic keys based on quantum protocols.
   
2. **Unconditionally Secure File Transfer**  
   A demonstration of an unconditionally secure file transfer protocol, leveraging quantum key distribution to ensure that file transfers are cryptographically secure against quantum computing attacks.
   
3. **Post-Quantum VPN Secured by QKD**  
   A live demo of a Virtual Private Network (VPN) system protected by QKD. It ensures that data transmission is secure even in a world with powerful quantum computers, providing post-quantum cryptographic security.
   
4. **QKD Vault Software**  
   A demonstration of QKD Vault software, designed to store and manage quantum keys securely. This software ensures that keys remain protected even in the face of future quantum threats.
   
5. **QKD Emulator Software**  
   The QKD Emulator Software simulates quantum key distribution processes, allowing for testing and verification of quantum communication protocols before deploying them in real-world scenarios.
   
6. **QKD Monitoring Dashboard (MonDash) Software**  
   A live demonstration of the QKD Monitoring Dashboard (MonDash), which provides a user-friendly interface for monitoring the performance, status, and security of QKD systems in real-time.

